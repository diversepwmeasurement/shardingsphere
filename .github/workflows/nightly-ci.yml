env:
  MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryHandler.class=standard
    -Dmaven.wagon.http.retryHandler.count=3
jobs:
  ci:
    if: github.repository == 'apache/shardingsphere'
    name: CI - JDK ${{ matrix.java-version }} on ${{ matrix.os }}
    needs: global-environment
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      if: matrix.os == 'windows-latest'
      name: Support Long Paths in Windows
      run: git config --global core.longpaths true
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: ${{ matrix.java-version }}
    - continue-on-error: true
      uses: actions/cache@v4
      with:
        key: ${{ needs.global-environment.outputs.GLOBAL_CACHE_PREFIX }}-maven-third-party-cache-${{
          github.sha }}
        path: ~/.m2/repository
        restore-keys: '${{ needs.global-environment.outputs.GLOBAL_CACHE_PREFIX }}-maven-third-party-cache-

          ${{ needs.global-environment.outputs.GLOBAL_CACHE_PREFIX }}-maven-third-party-

          '
    - continue-on-error: true
      name: Build Project with Maven
      run: ./mvnw clean install -B -ntp -T1C
    - continue-on-error: true
      name: Build Examples with Maven
      run: ./mvnw clean package -B -f examples/pom.xml -T1C
    strategy:
      fail-fast: false
      matrix:
        java-version:
        - 11
        - 17
        - 21
        - 22
        os:
        - ubuntu-latest
        - macos-latest
        - windows-latest
      max-parallel: 20
    timeout-minutes: 90
  ci-jdk8:
    if: github.repository == 'apache/shardingsphere'
    name: CI - JDK 8 on ${{ matrix.os }}
    needs: global-environment
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      if: matrix.os == 'windows-latest'
      name: Support Long Paths in Windows
      run: git config --global core.longpaths true
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: 11
    - continue-on-error: true
      uses: actions/cache@v4
      with:
        key: ${{ needs.global-environment.outputs.GLOBAL_CACHE_PREFIX }}-maven-third-party-cache-${{
          github.sha }}
        path: ~/.m2/repository
        restore-keys: '${{ needs.global-environment.outputs.GLOBAL_CACHE_PREFIX }}-maven-third-party-cache-

          ${{ needs.global-environment.outputs.GLOBAL_CACHE_PREFIX }}-maven-third-party-

          '
    - continue-on-error: true
      name: Build prod with Maven
      run: ./mvnw clean install -DskipTests -B -ntp -T1C
    - continue-on-error: true
      name: Setup JDK 8 for Test
      uses: actions/setup-java@v4
      with:
        distribution: zulu
        java-version: 8
    - continue-on-error: true
      name: Run Tests with JDK 8
      run: ./mvnw test -B -ntp -fae -T1C
    strategy:
      fail-fast: false
      matrix:
        os:
        - ubuntu-latest
        - macos-latest
        - windows-latest
      max-parallel: 20
    timeout-minutes: 90
  ci-native-test:
    if: github.repository == 'apache/shardingsphere'
    name: NativeTest CI - GraalVM CE on ${{ matrix.os }}
    needs: global-environment
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      uses: graalvm/setup-graalvm@v1
      with:
        distribution: graalvm-community
        github-token: ${{ secrets.GITHUB_TOKEN }}
        java-version: 22.0.1
    - continue-on-error: true
      uses: actions/cache@v4
      with:
        key: ${{ needs.global-environment.outputs.GLOBAL_CACHE_PREFIX }}-maven-third-party-cache-${{
          github.sha }}
        path: ~/.m2/repository
        restore-keys: '${{ needs.global-environment.outputs.GLOBAL_CACHE_PREFIX }}-maven-third-party-cache-

          ${{ needs.global-environment.outputs.GLOBAL_CACHE_PREFIX }}-maven-third-party-

          '
    - continue-on-error: true
      name: Run nativeTest with GraalVM CE
      run: ./mvnw -PnativeTestInShardingSphere -T1C -e clean test
    strategy:
      fail-fast: false
      matrix:
        os:
        - ubuntu-latest
      max-parallel: 20
    timeout-minutes: 90
  global-environment:
    name: Import Global Environment
    uses: ./.github/workflows/required-reusable.yml
name: Nightly - CI
on:
  repository_dispatch:
    types: trigger-ga___nightly-ci.yml
