jobs:
  init-environment:
    outputs:
      GLOBAL_CACHE_PREFIX: ${{ steps.check-job-executable.outputs.GLOBAL_CACHE_PREFIX
        }}
      GLOBAL_IS_NIGHTLY_JOB_EXECUTABLE: ${{ steps.check-job-executable.outputs.GLOBAL_IS_NIGHTLY_JOB_EXECUTABLE
        }}
      GLOBAL_JOB_ENABLED: ${{ steps.check-job-executable.outputs.GLOBAL_JOB_ENABLED
        }}
      GLOBAL_RUNS_ON: ${{ steps.import-variables.outputs.GLOBAL_RUNS_ON }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
      with:
        sparse-checkout: '.github/workflows/resources/variables/

          '
    - continue-on-error: true
      id: import-variables
      name: Setup Environment
      run: "cat .github/workflows/resources/variables/env-variables.properties | while\
        \ read line\ndo\n  echo ${line} >> $GITHUB_OUTPUT\ndone\necho \"GLOBAL_REPOSITORY=${{\
        \ env.GLOBAL_REPOSITORY }}\"\necho \"DISABLE_CI=${{ env.DISABLE_CI }}\"\n\
        GLOBAL_CACHE_PREFIX=$(echo '${{ env.GLOBAL_REPOSITORY }}' | sed 's/\\//_/g')\n\
        echo \"GLOBAL_CACHE_PREFIX=${GLOBAL_CACHE_PREFIX}\" >> $GITHUB_OUTPUT\n"
    - continue-on-error: true
      env:
        JSON_LABELS: ${{ toJSON(github.event.pull_request.labels.*.name) }}
      id: check-job-executable
      name: Check If Job is Executable
      run: "GLOBAL_CACHE_PREFIX=$(echo '${{ steps.import-variables.outputs.GLOBAL_REPOSITORY\
        \ }}' | sed 's/\\//-/g')\necho \"GLOBAL_CACHE_PREFIX=${GLOBAL_CACHE_PREFIX}\"\
        \ >> $GITHUB_OUTPUT\nif [ ${{ toJSON(github.repository) }} = ${{ steps.import-variables.outputs.GLOBAL_REPOSITORY\
        \ }} ]; then\n  echo \"GLOBAL_IS_NIGHTLY_JOB_EXECUTABLE=true\" >> $GITHUB_OUTPUT\n\
        \  echo \"GLOBAL_JOB_ENABLED=false\" >> $GITHUB_OUTPUT\n  if [ -z \"${{ steps.import-variables.outputs.DISABLE_CI\
        \ }}\"] || [ \"${{ steps.import-variables.outputs.DISABLE_CI }}\"==\"false\"\
        \ ] ; then\n    echo \"GLOBAL_JOB_ENABLED=true\" >> $GITHUB_OUTPUT\n  fi\n\
        fi\n"
      shell: sh
on:
  repository_dispatch:
    types: trigger-ga___required-reusable.yml
