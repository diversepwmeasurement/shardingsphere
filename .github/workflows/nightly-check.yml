env:
  MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryHandler.class=standard
    -Dmaven.wagon.http.retryHandler.count=3
jobs:
  check-and-report-sonarcloud:
    if: github.repository == 'apache/shardingsphere'
    name: Check - SonarCloud
    needs: global-environment
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: 17
    - continue-on-error: true
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-sonar
        path: ~/.sonar/cache
        restore-keys: ${{ runner.os }}-sonar
    - continue-on-error: true
      uses: actions/cache@v4
      with:
        key: ${{ needs.global-environment.outputs.GLOBAL_CACHE_PREFIX }}-maven-third-party-${{
          hashFiles('**/pom.xml') }}
        path: ~/.m2/repository
        restore-keys: '${{ needs.global-environment.outputs.GLOBAL_CACHE_PREFIX }}-maven-third-party-

          '
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        MAVEN_OPTS: -XX:+UseG1GC -XX:InitialHeapSize=2g -XX:MaxHeapSize=6g -XX:+UseStringDeduplication
        SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}
      name: Analyze with SonarCloud
      run: ./mvnw -B clean verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
        -Dsonar.projectKey=apache_shardingsphere -DskipTests
    timeout-minutes: 25
  check-codeql:
    if: github.repository == 'apache/shardingsphere'
    name: Check - CodeQL
    needs: global-environment
    permissions:
      actions: read
      contents: read
      security-events: write
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: 11
    - continue-on-error: true
      name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: java
    - continue-on-error: true
      uses: actions/cache@v4
      with:
        key: ${{ needs.global-environment.outputs.GLOBAL_CACHE_PREFIX }}-maven-third-party-${{
          hashFiles('**/pom.xml') }}
        path: ~/.m2/repository
        restore-keys: '${{ needs.global-environment.outputs.GLOBAL_CACHE_PREFIX }}-maven-third-party-

          '
    - continue-on-error: true
      name: Install Project
      run: './mvnw clean install -DskipTests -B -ntp -T1C

        '
    - continue-on-error: true
      name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: /language:java
    timeout-minutes: 100
  check-dead-links:
    if: github.repository == 'apache/shardingsphere'
    name: Check - Dead Links
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      run: sudo npm install -g markdown-link-check@3.10.0
    - continue-on-error: true
      name: Check dead link
      run: "IGNORED_PATH_LIST=(\"./docs/document/themes\" \"./docs/community/content/powered-by\"\
        \ \"./docs/blog/content/material\" \"./docs/blog/themes\" \"./docs/community/themes\"\
        )\nignore_current_file=false\n\nfor file in $(find . -name \"*.md\"); do\n\
        \  for ignored_path in ${IGNORED_PATH_LIST[@]}\n    do\n      if [[ $file\
        \ =~ $ignored_path ]]; then\n        ignore_current_file=true\n        break\n\
        \      fi\n    done\nif [[ $ignore_current_file == true ]]; then\n  ignore_current_file=false\n\
        \  continue\nfi\necho \"Checking $file\"\nmarkdown-link-check -c .github/workflows/resources/linkcheck/markdown-link-check.json\
        \ -q \"$file\"\ndone\n"
    timeout-minutes: 15
  check-dependency-convergence:
    if: github.repository == 'apache/shardingsphere'
    name: Check - Dependency Convergence
    needs: global-environment
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      uses: actions/cache@v4
      with:
        key: ${{ needs.global-environment.outputs.GLOBAL_CACHE_PREFIX }}-maven-third-party-${{
          hashFiles('**/pom.xml') }}
        path: ~/.m2/repository
        restore-keys: '${{ needs.global-environment.outputs.GLOBAL_CACHE_PREFIX }}-maven-third-party-

          '
    - continue-on-error: true
      name: Run Dependency Convergence Check
      run: 'sed -i ''/<requireMavenVersion>/i \                                    <dependencyConvergence/>''
        pom.xml

        ./mvnw clean install -DskipTests -T1C -Dmaven.enforcer.fail=true

        '
    timeout-minutes: 10
  check-spotbugs:
    if: github.repository == 'apache/shardingsphere'
    name: Check - SpotBugs
    needs: global-environment
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      uses: actions/cache@v4
      with:
        key: ${{ needs.global-environment.outputs.GLOBAL_CACHE_PREFIX }}-maven-third-party-${{
          hashFiles('**/pom.xml') }}
        path: ~/.m2/repository
        restore-keys: '${{ needs.global-environment.outputs.GLOBAL_CACHE_PREFIX }}-maven-third-party-

          '
    - continue-on-error: true
      name: Run SpotBugs
      run: ./mvnw clean install spotbugs:check -Pcheck -T1C
    timeout-minutes: 60
  check-stale:
    if: github.repository == 'apache/shardingsphere'
    name: Check - Stale Issues
    permissions:
      issues: write
      pull-requests: write
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/stale@v9
      with:
        any-of-issue-labels: 'status: need more info,type: question'
        days-before-close: -1
        days-before-issue-stale: 14
        days-before-pr-stale: -1
        operations-per-run: 100
        remove-stale-when-updated: true
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        stale-issue-label: stale
        stale-issue-message: 'There hasn''t been any activity on this issue recently,
          and in order to prioritize active issues, it will be marked as stale.

          '
    timeout-minutes: 10
  checkstyle-report-sonarcloud:
    if: github.repository == 'apache/shardingsphere'
    name: Checkstyle - SonarCloud
    needs: global-environment
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: 17
    - continue-on-error: true
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-sonar
        path: ~/.sonar/cache
        restore-keys: ${{ runner.os }}-sonar
    - continue-on-error: true
      uses: actions/cache@v4
      with:
        key: ${{ needs.global-environment.outputs.GLOBAL_CACHE_PREFIX }}-maven-third-party-${{
          hashFiles('**/pom.xml') }}
        path: ~/.m2/repository
        restore-keys: '${{ needs.global-environment.outputs.GLOBAL_CACHE_PREFIX }}-maven-third-party-

          '
    - continue-on-error: true
      name: Aggregate checkstyle report
      run: 'export MAVEN_OPTS=''-Xmx6g -Xms512m''

        ./mvnw clean verify checkstyle:checkstyle-aggregate

        '
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}
      name: Upload checkstyle report to SonarCloud
      run: ./mvnw -B sonar:sonar -Dsonar.projectKey=apache_shardingsphere -Dsonar.java.checkstyle.reportPaths=target/checkstyle-result.xml
    timeout-minutes: 100
  global-environment:
    name: Import Global Environment
    uses: ./.github/workflows/required-reusable.yml
name: Nightly - Check
on:
  repository_dispatch:
    types: trigger-ga___nightly-check.yml
