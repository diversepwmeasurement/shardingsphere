concurrency:
  cancel-in-progress: true
  group: e2e-${{ github.workflow }}-${{ github.ref }}
env:
  MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryHandler.class=standard
    -Dmaven.wagon.http.retryHandler.count=3 -Dspotless.apply.skip=true
jobs:
  agent-mysql:
    if: ${{ needs.global-environment.outputs.GLOBAL_JOB_ENABLED == 'true' }}
    name: E2E - Agent with MySQL
    needs:
    - global-environment
    - build-e2e-image
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: 11
    - continue-on-error: true
      uses: actions/cache@v4
      with:
        key: ${{ needs.global-environment.outputs.GLOBAL_CACHE_PREFIX }}-maven-third-party-${{
          hashFiles('**/pom.xml') }}
        path: ~/.m2/repository
        restore-keys: '${{ needs.global-environment.outputs.GLOBAL_CACHE_PREFIX }}-maven-third-party-

          '
    - continue-on-error: true
      if: matrix.adapter == 'proxy'
      name: Download Proxy E2E Image
      uses: actions/download-artifact@v4
      with:
        name: proxy-e2e-image
        path: /tmp/
    - continue-on-error: true
      if: matrix.adapter == 'proxy'
      name: Load Proxy E2E Image
      run: docker load -i /tmp/${{ needs.global-environment.outputs.GLOBAL_CACHE_PREFIX
        }}-proxy-agent-test.tar
    - continue-on-error: true
      if: matrix.adapter == 'jdbc'
      name: Download JDBC E2E Image
      uses: actions/download-artifact@v4
      with:
        name: jdbc-e2e-image
        path: /tmp/
    - continue-on-error: true
      if: matrix.adapter == 'jdbc'
      name: Load JDBC E2E Image
      run: docker load -i /tmp/${{ needs.global-environment.outputs.GLOBAL_CACHE_PREFIX
        }}-jdbc-agent-test.tar
    - continue-on-error: true
      name: Build Project
      run: ./mvnw -B clean install -am -pl test/e2e/agent/plugins/${{ matrix.feature
        }}/${{ matrix.plugin }} -DskipTests
    - continue-on-error: true
      name: Run E2E Test
      run: ./mvnw -nsu -B clean install -f test/e2e/agent/plugins/${{ matrix.feature
        }}/${{ matrix.plugin }}/pom.xml -Dit.env.adapter=${{ matrix.adapter }} -Dit.env.plugin=${{
        matrix.plugin }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - adapter: proxy
          feature: tracing
          plugin: jaeger
        - adapter: proxy
          feature: tracing
          plugin: zipkin
        - adapter: proxy
          feature: metrics
          plugin: prometheus
        - adapter: proxy
          feature: logging
          plugin: file
        - adapter: jdbc
          feature: logging
          plugin: file
        - adapter: jdbc
          feature: metrics
          plugin: prometheus
        - adapter: jdbc
          feature: tracing
          plugin: jaeger
        - adapter: jdbc
          feature: tracing
          plugin: zipkin
      max-parallel: 20
    timeout-minutes: 15
  build-e2e-image:
    name: Build E2E Image
    needs: global-environment
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: 11
    - continue-on-error: true
      uses: actions/cache@v4
      with:
        key: ${{ needs.global-environment.outputs.GLOBAL_CACHE_PREFIX }}-maven-third-party-e2e-cache-${{
          github.sha }}
        path: ~/.m2/repository
        restore-keys: '${{ needs.global-environment.outputs.GLOBAL_CACHE_PREFIX }}-maven-third-party-e2e-cache-

          ${{ needs.global-environment.outputs.GLOBAL_CACHE_PREFIX }}-maven-third-party-

          '
    - continue-on-error: true
      name: Build Project
      run: ./mvnw -B clean install -DskipTests -Prelease
    - continue-on-error: true
      name: Build Proxy E2E Image
      run: ./mvnw clean install -DskipTests -Pit.env.proxy -f test/e2e/agent/plugins/common/pom.xml
    - continue-on-error: true
      name: Save Proxy E2E Image
      run: docker save -o /tmp/${{ needs.global-environment.outputs.GLOBAL_CACHE_PREFIX
        }}-proxy-agent-test.tar apache/shardingsphere-proxy-agent-test:latest
    - continue-on-error: true
      uses: actions/upload-artifact@v4
      with:
        name: proxy-e2e-image
        path: /tmp/${{ needs.global-environment.outputs.GLOBAL_CACHE_PREFIX }}-proxy-agent-test.tar
        retention-days: 10
    - continue-on-error: true
      name: Build JDBC E2E Image
      run: ./mvnw clean install -DskipTests -Pit.env.jdbc -f test/e2e/agent/plugins/common/pom.xml
    - continue-on-error: true
      name: Save JDBC E2E Image
      run: docker save -o /tmp/${{ needs.global-environment.outputs.GLOBAL_CACHE_PREFIX
        }}-jdbc-agent-test.tar apache/shardingsphere-jdbc-agent-test:latest
    - continue-on-error: true
      uses: actions/upload-artifact@v4
      with:
        name: jdbc-e2e-image
        path: /tmp/${{ needs.global-environment.outputs.GLOBAL_CACHE_PREFIX }}-jdbc-agent-test.tar
        retention-days: 10
    timeout-minutes: 20
  global-environment:
    name: Import Global Environment
    uses: ./.github/workflows/required-reusable.yml
name: E2E - Agent
on:
  repository_dispatch:
    types: trigger-ga___e2e-agent.yml
