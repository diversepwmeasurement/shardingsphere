concurrency:
  cancel-in-progress: true
  group: e2e-${{ github.workflow }}-${{ github.ref }}
env:
  MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryHandler.class=standard
    -Dmaven.wagon.http.retryHandler.count=3 -Dspotless.apply.skip=true
  SEGMENT_DOWNLOAD_TIMEOUT_MINS: 1
jobs:
  build-e2e-image:
    name: Build E2E Image
    needs: global-environment
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: 11
    - continue-on-error: true
      uses: actions/cache@v4
      with:
        key: ${{ needs.global-environment.outputs.GLOBAL_CACHE_PREFIX }}-maven-third-party-e2e-cache-${{
          github.sha }}
        path: ~/.m2/repository
        restore-keys: '${{ needs.global-environment.outputs.GLOBAL_CACHE_PREFIX }}-maven-third-party-e2e-cache-

          ${{ needs.global-environment.outputs.GLOBAL_CACHE_PREFIX }}-maven-third-party-

          '
    - continue-on-error: true
      name: Build E2E Image
      run: ./mvnw -B clean install -am -pl test/e2e/sql -Pit.env.docker -DskipTests
        -Dspotless.apply.skip=true
    - continue-on-error: true
      name: Save E2E Image
      run: docker save -o /tmp/${{ needs.global-environment.outputs.GLOBAL_CACHE_PREFIX
        }}-proxy-test.tar apache/shardingsphere-proxy-test:latest
    - continue-on-error: true
      uses: actions/upload-artifact@v4
      with:
        name: e2e-image
        path: /tmp/${{ needs.global-environment.outputs.GLOBAL_CACHE_PREFIX }}-proxy-test.tar
        retention-days: 10
    timeout-minutes: 20
  e2e-sql:
    if: ${{ needs.global-environment.outputs.GLOBAL_JOB_ENABLED == 'true' }}
    name: E2E - SQL
    needs:
    - build-e2e-image
    - global-environment
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      uses: actions/cache@v4
      with:
        key: ${{ needs.global-environment.outputs.GLOBAL_CACHE_PREFIX }}-maven-third-party-e2e-cache-${{
          github.sha }}
        path: ~/.m2/repository
    - continue-on-error: true
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: 11
    - continue-on-error: true
      if: matrix.adapter == 'proxy'
      name: Download E2E Image
      uses: actions/download-artifact@v4
      with:
        name: e2e-image
        path: /tmp/
    - continue-on-error: true
      if: matrix.adapter == 'proxy'
      name: Load E2E Image
      run: docker load -i /tmp/${{ needs.global-environment.outputs.GLOBAL_CACHE_PREFIX
        }}-proxy-test.tar
    - continue-on-error: true
      name: Run E2E Test
      run: ./mvnw -nsu -B install -f test/e2e/sql/pom.xml -Dspotless.apply.skip=true
        -Dit.cluster.env.type=DOCKER -Dit.cluster.adapters=${{ matrix.adapter }} -Dit.run.modes=${{
        matrix.mode }} -Dit.run.additional.cases=false -Dit.scenarios=${{ matrix.scenario
        }} -Dit.cluster.databases=${{ matrix.database }} ${{ matrix.additional-options
        }}
    strategy:
      fail-fast: false
      matrix:
        adapter:
        - proxy
        - jdbc
        additional-options:
        - ''
        database:
        - MySQL
        - PostgreSQL
        exclude:
        - adapter: jdbc
          scenario: passthrough
        - adapter: jdbc
          mode: Cluster
        - adapter: proxy
          mode: Standalone
          scenario: empty_rules
        - adapter: proxy
          mode: Standalone
          scenario: distsql_rdl
        - adapter: proxy
          mode: Standalone
          scenario: passthrough
        - adapter: proxy
          scenario: empty_storage_units
        include:
        - adapter: proxy
          additional-options: -Dmysql-connector-java.version=8.3.0
          database: MySQL
          scenario: passthrough
        mode:
        - Standalone
        - Cluster
        scenario:
        - empty_rules
        - distsql_rdl
        - passthrough
        - db
        - tbl
        - encrypt
        - readwrite_splitting
        - shadow
        - mask
        - dbtbl_with_readwrite_splitting_and_encrypt
        - sharding_and_encrypt
        - encrypt_and_readwrite_splitting
        - encrypt_shadow
        - readwrite_splitting_and_shadow
        - sharding_and_shadow
        - sharding_encrypt_shadow
        - mask_encrypt
        - mask_sharding
        - mask_encrypt_sharding
        - db_tbl_sql_federation
        - empty_storage_units
      max-parallel: 20
    timeout-minutes: 15
  global-environment:
    name: Import Global Environment
    uses: ./.github/workflows/required-reusable.yml
name: E2E - SQL
on:
  repository_dispatch:
    types: trigger-ga___e2e-sql.yml
